def deriv(j,y,x,X,d):
    global a
#    X=X-1
    if d==1 :
        if j==0 :
            a=(((x[2]-x[0])/(x[2]-x[1]))*((y[1]-y[0])/(x[1]-x[0]))-(((x[1]-x[0])/(x[2]-x[1]))*((y[2]-y[0])/(x[2]-x[0]))))
            
        if j>0 and X-1>j : 
            a=((x[j+1]-x[j])/(x[j+1]-x[j-1]))*((y[j]-y[j-1])/(x[j]-x[j-1]))+((x[j]-x[j-1])/(x[j+1]-x[j-1]))*((y[j+1]-y[j])/(x[j+1]-x[j]))
        
        if j==X-1 :
            a = ((x[X-1]-x[X-3])/(x[X-2]-x[X-3]))*((y[X-1]-y[X-2])/(x[X-1]-x[X-2]))-((x[X-1]-x[X-2])/(x[X-2]-x[X-3]))*((y[X-1]-y[X-3])/(x[X-1]-x[X-3]))
            
    if d==2 :
        if j==0:
            a = 2/(x[2]-x[1])*((y[2]-y[0])/(x[2]-x[0])-(y[1]-y[0])/(x[1]-x[0]))
        
        if  j>0 and X-1>j:
            a = 2/(x[j+1]-x[j-1])*(((y[j+1]-y[j])/(x[j+1]-x[j]))-
            ((y[j]-y[j-1])/(x[j]-x[j-1])))
        
        if j==X-1 :
            a = 2/(x[X-2]-x[X-3])*((y[X-1]-y[X-2])/(x[X-1]-x[X-2])-
            (y[X-1]-y[X-3])/(x[X-1]-x[X-3]))
            
    return a
